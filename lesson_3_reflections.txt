When would you want to use a remote repository rather than keeping all your work local?

  Using a remote repository facilitates collaboration by allowing multiple users to 
  interact with the project. It could even be helpful when working on a completely
  individual project by creating a hub for the project that you can interact with 
  from multiple computers.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	Pulling changes manually could be helpful to ensure that your work on a project
	isn't thrown off by project updates made by another user. Waiting to sync until
	your work is ready could be prudent.

Describe the differences between forks, clones, and branches. When would you use one
instead of another?

	Forks -- functionally clone a repository but from one GitHub account to another
	Clones -- clone a repository onto your local drive; can either clone a remote
	or a repository already on your local drive
	Branches -- Separates commit proressions in your repository into progressions
	with unique names i.e. master, experimental, spanish

	Forks should be used if you're trying to build upon someone else's existing work. 
	Clones are good for bringing a new project from GitHub to your local drive. 
	Branches are good for developing and working on separate functions or parts of
	an existing project.

What is the benefit of having a copy of the last known state of the remote stored locally?

	Having a copy of the last known state of the remote stored locally facilitates merging
	local and remote commits in the case that they are in conflict with each other. If the
	two versions diverge, they can be combined by a git fetch & git merge or a git pull
	which combines those two processes.